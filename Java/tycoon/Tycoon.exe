import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
import java.text.DecimalFormat;


public class Tycoon extends JFrame{
  
  static String ore = "0", miner = "0";
  static double cash, price,total=0.0;
  static int  miners = 0,add=(1*miners)+1 ,minerPrice = 10, i= 0, excavatorPrice = 150,excavators = 0, click = 1, upPrice = 100;
  static JLabel[] labels = {new JLabel("Ore : "+ore),new JLabel("Miners : "+miner),new JLabel("OPS : "+(miners)), new JLabel("$"+cash), new JLabel("Ore Price")};
  //[ore] - [miners] - [OPS] - [cash] - [ore price]
  static JFrame frame = new JFrame();
  static File file = new File("Tycoon.txt");
  static DecimalFormat df = new DecimalFormat("#.##");
  
  
  public static void main(String[] args) throws InterruptedException, FileNotFoundException, IOException, NumberFormatException{ 
    
    Scanner read = new Scanner(file);
    
    
    
    JButton[] buttons = {new JButton("   Mine   ("+click+" Ore/Click)"),           new JButton("Miner($"+minerPrice+") +1 OPS",  new ImageIcon("Pictures//Pickaxe.JPG"))       ,new JButton("Excavator($"+excavatorPrice+") +2 OPS", new ImageIcon("Pictures//Exc.JPG")), new JButton("Sell", new ImageIcon("Pictures//1.JPG")),          new JButton("Sell"), new JButton("New"), new JButton("Load"), new JButton("Upgrade Pickaxe ($"+upPrice+")")};
    
    buttons[0].setPreferredSize(new Dimension(50,50));
    frame.setSize(800,800);
    frame.setTitle("Ore Clicker");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    labels[0].setFont(new Font("Comic Sans",Font.BOLD, 50));
    labels[1].setFont(new Font("Comic Sans",Font.BOLD, 50));
    labels[3].setFont(new Font("Comic Sans",Font.BOLD, 50));
    labels[4].setFont(new Font("Comic Sans",Font.BOLD, 30));
    labels[2].setFont(new Font("Comic Sans",Font.BOLD, 30));
    JBox box = JBox.vbox(
                         JBox.hbox(labels[0], JBox.hglue(), labels[4]),
                         
                         labels[3],
                         labels[2],
                         JBox.vglue(),
                         buttons[0],
                         
                         JBox.vglue(),
                         JBox.hglue(),JBox.vbox(buttons[7],JBox.hglue(),buttons[1],buttons[2]),buttons[3]
                        );
    
    JBox box1 = JBox.hbox(
                          JBox.hbox(buttons[5],buttons[6])
    
    );
    frame.add(box1);
     buttons[5].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        try{
         File file = new File("Tycoon.txt");
          file.createNewFile();
          frame.remove(box1);
          frame.add(box);
        }catch(Exception f){
        }
      }
    });
     buttons[7].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        if(cash>=upPrice){
        cash-=upPrice;
        click+=1;
        upPrice = 50+(10*click);
        buttons[7].setText("Upgrade Pickaxe ($"+upPrice+")");
        labels[3].setText("$"+df.format(cash));
        buttons[0].setText("   Mine   ("+click+" Ore/Click)");
        }
      }
    });
    buttons[6].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        while(read.hasNextLine()){
          total = Double.valueOf(read.nextDouble());
          labels[0].setText("Ore : "+total);
          miners = read.nextInt();
          miner = Double.toString(miners);
          labels[1].setText("Miners : "+miner);
          labels[2].setText("MPS : "+(miners));
          cash = Double.valueOf(read.nextDouble());
          labels[3].setText("$"+df.format(cash));
          
          }
        frame.remove(box1);
          frame.add(box);
          read.close();
      }
    });
    


    
    
    
    
    frame.setVisible(true);
    
   
    
      
      
      
     
      
      
      
    
    
    
    
    buttons[0].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        total += click;
        ore = Double.toString(total);
        labels[0].setText("Ore : "+ore);
      }
    });
    buttons[1].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        if(cash>=minerPrice){
          miners +=1;
          cash-=minerPrice;
          labels[3].setText("$"+df.format(cash));
          ore = Double.toString(total);
          labels[0].setText("Ore : "+ore);
          miner = Integer.toString(miners);
          labels[1].setText("Miners : "+miner);
          labels[2].setText("OPS : "+(miners));
          minerPrice=(10+(2*((miners))));
          buttons[1].setText("Miner($"+minerPrice+") +1 OPS");
        }
        
      }
    });
    frame.addWindowListener(new WindowAdapter()
                              {
      
      public void windowClosing(WindowEvent e)
      {
        try{
          FileWriter writer = new FileWriter(file);
          writer.write(Double.toString(total));
          writer.write("\n"+miners);
          writer.write("\n"+cash);
          System.out.println("Saved!");
          writer.close();
          e.getWindow().dispose();
        }catch(Exception f){
          Func.pr("yeet");
        }
      }
    });
    
    buttons[2].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        
        if(cash>=excavatorPrice){
        excavators +=1;  
        excavatorPrice = 150+(5*excavators);
        cash -= excavatorPrice;
        labels[3].setText("$"+df.format(cash));
        miners+=2;
        labels[2].setText("OPS : "+miners);
        buttons[2].setText("Excavator($"+excavatorPrice+") +2 OPS");
        
        }
      }
    });
    buttons[3].addActionListener(new ActionListener(){
      public void actionPerformed(ActionEvent e){
        cash += total*price;
        total = 0;
        labels[0].setText("Ore : "+total);
        labels[3].setText("$"+df.format(cash));
      }
    });
   
    for(;;){
      Random rnd = new Random();
      
      Thread.sleep(1000);
      i++;
      total+= miners;
      ore = Double.toString(total);
      labels[0].setText("Ore : "+ore);
      if(i%5 == 0){
        price = rnd.nextDouble();
        labels[4].setText("Ore Price : $"+df.format(price));
        
      }
      
    }
    
  }
  
  
  
}
